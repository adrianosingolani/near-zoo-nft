{"version":3,"sources":["utils/config.js","utils/near.js","components/Header.js","utils/nfts.js","components/Mint.js","components/Collection.js","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","ButtonAppBar","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","Button","marginLeft","color","onClick","signOut","location","reload","requestSignIn","nfts","title","description","class","BN","require","Mint","mintNFT","index","Math","floor","random","length","params","token_id","Date","now","metadata","media","receiver_id","console","log","nft_mint","display","flexDirection","justifyContent","marginY","width","disabled","Collection","useState","tokens","setTokens","useEffect","getTokens","nft_tokens_for_owner","account_id","then","res","catch","err","marginBottom","flexWrap","filter","nft","map","amphibian","i","Card","padding","border","marginRight","CardMedia","image","alt","some","t","opacity","bird","mammal","reptile","App","className","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","createRoot","document","getElementById","render","StrictMode","error"],"mappings":"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","file":"static/js/main.2db0ddad.chunk.js","sourcesContent":["const CONTRACT_NAME = \"zoo-nft.adriano.testnet\"\n\nfunction environment(env) {\n  switch (env) {\n    case \"mainnet\": \n      return {\n        networkId: \"mainnet\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n        explorerUrl: \"https://explorer.mainnet.near.org\",\n      };\n    case \"testnet\": \n      return {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\",\n      };\n    default:\n      throw Error(`Unknown environment '${env}'.`);\n  }\n}\n\nexport default environment;","import environment from './config';\nimport { connect, Contract, keyStores, WalletConnection } from 'near-api-js';\nimport { formatNearAmount } from 'near-api-js/lib/utils/format';\n\nconst nearEnv = environment('testnet');\n\nexport async function initializeContract() {\n  const near = await connect(Object.assign({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } }, nearEnv));\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(\n    window.walletConnection.account(),\n    nearEnv.contractName,\n    {\n      viewMethods: ['nft_tokens_for_owner'],\n      changeMethods: ['nft_mint'],\n    }\n  );\n}\n\nexport async function accountBalance() {\n  return formatNearAmount(\n    (await window.walletConnection.account().getAccountBalance()).total,\n    2\n  );\n}\n\nexport async function getAccountId() {\n  return window.walletConnection.getAccountId();\n}\n\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\n\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}","import * as React from 'react';\n\nimport { login, logout } from \"../utils/near\";\n\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button\n} from '@mui/material/';\n\nexport default function ButtonAppBar() {\n  const account = window.walletConnection.account();\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            NEAR Zoo NFT\n          </Typography>\n          {account.accountId ? (\n            <>\n              <Typography variant=\"caption\">{account.accountId}</Typography>\n              <Button sx={{marginLeft: 2}} variant=\"outlined\" color=\"inherit\" onClick={() => logout()}>Logout</Button>\n            </>\n          ) : (\n            <Button color=\"inherit\" onClick={() => login()}>Login</Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","export const nfts = [\n  {\n    title: 'Lion',\n    description: 'A symbol of courage and bravery - the majestic lion king of animals.',\n    class: 'mammals',\n  },\n  {\n    title: 'Wolf',\n    description: 'An intelligent and freedom-loving predator, a relative of dogs of all breeds.',\n    class: 'mammals',\n  },\n  {\n    title: 'Capybara',\n    description: 'Kind and charming giant among rodents.',\n    class: 'mammals',\n  },\n  {\n    title: 'Giraffe',\n    description: 'An elegant giant, the tallest animal on Earth.',\n    class: 'mammals',\n  },\n  {\n    title: 'Hippopotamus',\n    description: 'The largest and strongest inhabitant of rivers and lakes in Africa.',\n    class: 'mammals',\n  },\n  {\n    title: 'NileCrocodile',\n    description: 'The largest and most formidable predator of African rivers and lakes.',\n    class: 'reptiles',\n  },\n  {\n    title: 'WaterAgama',\n    description: 'A beautiful and unusual oriental symbol of dragon.',\n    class: 'reptiles',\n  },\n  {\n    title: 'Barnacle',\n    description: 'A small, beautifully colored, few goose.',\n    class: 'birds',\n  },\n  {\n    title: 'Peacock',\n    description: 'One of the most beautiful birds in the world because of its luxurious plumage.',\n    class: 'birds',\n  },\n  {\n    title: 'Vulture',\n    description: 'The name of this bird comes from the Slavic word \"strva\", meaning \"carrion\", \"waste\".',\n    class: 'birds',\n  },\n  {\n    title: 'MarineToad',\n    description: 'One of the largest and most venomous toads in South America.',\n    class: 'amphibians',\n  },\n  {\n    title: 'AustralianBlueTreeFrog',\n    description: 'One of the largest tree frogs.',\n    class: 'amphibians',\n  },\n]","import React, { useEffect, useState } from 'react';\n\nimport {\n  Box,\n  Button,\n  // Card,\n  // CardMedia,\n  // CardActions,\n  Typography,\n  ImageList,\n  ImageListItem\n} from '@mui/material';\n\nimport { nfts } from '../utils/nfts';\n\nconst BN = require(\"bn.js\")\n\n// import getConfig from '../config'\n// const { networkId } = getConfig(process.env.NODE_ENV || 'development')\n\nfunction Mint() {\n  // const [nftParams, setNftParams] = useState()\n\n  const account = window.walletConnection.account();\n\n  // useEffect(() => {\n  //   // console.log('useEffect');\n  //   const result = tokens.filter(token => token.token_id === nftParams.token_id);\n\n  //   if (result.length > 0) {\n  //     console.log('already minted');\n  //     // drawCard()\n  //   }\n  // }, [nftParams])\n\n  // const drawCard = () => {\n  //   // console.log('drawCard');\n  //   const card = dealer.draw(1)[0]\n\n  //   const rank = card.rank.charAt(0).toUpperCase() + card.rank.slice(1)\n  //   const suit = card.suit\n\n  //   const params = {\n  //     token_id: `${window.accountId}-${rank}-of-${suit}-test1`,\n  //     metadata: {\n  //       title: `${rank} of ${suit}`,\n  //       description: \"NFT collection created for the challenge #3 of NEAR SPRING POP-UP HACKATHON\",\n  //       media: `https://adrianosingolani.github.io/near-nft/cards/${suit}/${rank}.png`,\n  //     },\n  //     receiver_id: window.accountId,\n  //   }\n\n  //   setNftParams(params)\n  // }\n\n  const mintNFT = async () => {\n    // console.log('mint');\n\n    const index = Math.floor(Math.random() * nfts.length);\n\n    // console.log(nfts[index]);\n\n    const { title, description } = nfts[index];\n\n    const params = {\n      token_id: `${window.accountId}-${title}-${Date.now()}`,\n      metadata: {\n        title: title,\n        description: description,\n        media: `https://adrianosingolani.github.io/near-zoo-nft/assets/${title}.jpg`,\n      },\n      receiver_id: window.accountId,\n    }\n\n    console.log(params);\n\n    await window.contract.nft_mint(\n      params,\n      300000000000000, // attached GAS (optional)\n      new BN(\"1000000000000000000000000\")\n    );\n  };\n\n  // if (nftParams) {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', marginY: 4 }}>\n      <Box sx={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n        <Button\n          onClick={() => mintNFT()}\n          disabled={account.accountId ? false : true}\n          variant='contained'\n        >\n          Mint new NFT\n        </Button>\n      </Box>\n      {/* <Card sx={{ maxWidth: 180, boxShadow: 'none' }}>\n          <CardMedia\n            component=\"img\"\n            // height=\"120\"\n            image={nftParams.metadata.media}\n            alt={nftParams.metadata.title}\n          />\n          <CardActions style={{ padding: 0, paddingTop: 16, paddingBottom: 32 }}>\n            <Button variant='outlined' fullWidth onClick={() => mintNFT()}>Mint</Button>\n          </CardActions>\n        </Card> */}\n      {/* <Typography variant='h3'>Your collection:</Typography>\n      <ImageList cols={6}>\n        {tokens.map((item) => (\n          <ImageListItem key={item.token_id}>\n            <img\n              src={item.metadata.media}\n              alt={item.metadata.title}\n              style={{ width: 90 }}\n              loading=\"lazy\"\n            />\n          </ImageListItem>\n        ))}\n      </ImageList> */}\n    </Box>\n  )\n  // }\n\n  // return (\n  //   <Typography>Loading...</Typography>\n  // )\n}\n\nexport default Mint","import React, { useState, useEffect } from 'react'\n\nimport {\n  Typography,\n  Box,\n  Card,\n  CardMedia,\n} from '@mui/material'\n\nimport { nfts } from '../utils/nfts';\n\nfunction Collection() {\n  const [tokens, setTokens] = useState([])\n\n  // useEffect(() => {\n  //   console.log(tokens);\n  //   console.log(tokens.some((t) => t.metadata.title === 'Lion'));\n  // }, [tokens])\n\n  useEffect(() => {\n    getTokens()\n  }, [])\n\n  const getTokens = async () => {\n    window.contract.nft_tokens_for_owner({\n      account_id: window.accountId,\n    })\n      .then(res => {\n        setTokens(res);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  };\n\n  return (\n    <>\n      <Typography variant='h4'>Collection</Typography>\n\n      <Box sx={{ marginBottom: 4 }}>\n        <Typography variant='h6'>Amphibians</Typography>\n        <Box sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          {\n            nfts.filter(nft => (nft.class === 'amphibians')).map((amphibian, i) => (\n              <Card sx={{ width: '250px', padding: 1, border: '2px solid #777', marginRight: 2, marginBottom: 2 }} key={`amphibian_${i}`}>\n                <CardMedia\n                  component=\"img\"\n                  image={`https://adrianosingolani.github.io/near-zoo-nft/assets/${amphibian.title}.jpg`}\n                  alt={amphibian.title}\n                  sx={\n                    tokens.some((t) => t.metadata.title === amphibian.title) ? null : { filter: 'grayscale(100%)', opacity: 0.35 }\n                  }\n                />\n              </Card>\n            ))\n          }\n        </Box>\n      </Box>\n\n      <Box sx={{ marginBottom: 4 }}>\n        <Typography variant='h6'>Birds</Typography>\n        <Box sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          {\n            nfts.filter(nft => (nft.class === 'birds')).map((bird, i) => (\n              <Card sx={{ width: '250px', padding: 1, border: '2px solid #777', marginRight: 2, marginBottom: 2 }} key={`bird_${i}`}>\n                <CardMedia\n                  component=\"img\"\n                  image={`https://adrianosingolani.github.io/near-zoo-nft/assets/${bird.title}.jpg`}\n                  alt={bird.title}\n                  sx={\n                    tokens.some((t) => t.metadata.title === bird.title) ? null : { filter: 'grayscale(100%)', opacity: 0.35 }\n                  }\n                />\n              </Card>\n            ))\n          }\n        </Box>\n      </Box>\n\n      <Box sx={{ marginBottom: 4 }}>\n        <Typography variant='h6'>Mammals</Typography>\n        <Box sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          {\n            nfts.filter(nft => (nft.class === 'mammals')).map((mammal, i) => (\n              <Card sx={{ width: '250px', padding: 1, border: '2px solid #777', marginRight: 2, marginBottom: 2 }} key={`mammal_${i}`}>\n                <CardMedia\n                  component=\"img\"\n                  image={`https://adrianosingolani.github.io/near-zoo-nft/assets/${mammal.title}.jpg`}\n                  alt={mammal.title}\n                  sx={\n                    tokens.some((t) => t.metadata.title === mammal.title) ? null : { filter: 'grayscale(100%)', opacity: 0.35 }\n                  }\n                />\n              </Card>\n            ))\n          }\n        </Box>\n      </Box>\n\n      <Box sx={{ marginBottom: 4 }}>\n        <Typography variant='h6'>Reptiles</Typography>\n        <Box sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          {\n            nfts.filter(nft => (nft.class === 'reptiles')).map((reptile, i) => (\n              <Card sx={{ width: '250px', padding: 1, border: '2px solid #777', marginRight: 2, marginBottom: 2 }} key={`reptile_${i}`}>\n                <CardMedia\n                  component=\"img\"\n                  image={`https://adrianosingolani.github.io/near-zoo-nft/assets/${reptile.title}.jpg`}\n                  alt={reptile.title}\n                  sx={\n                    tokens.some((t) => t.metadata.title === reptile.title) ? null : { filter: 'grayscale(100%)', opacity: 0.35 }\n                  }\n                />\n              </Card>\n            ))\n          }\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default Collection","import React from \"react\";\n\nimport Header from './components/Header'\nimport Mint from \"./components/Mint\";\nimport Collection from \"./components/Collection\";\n\nimport { Container } from \"@mui/material\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container>\n        <Mint />\n        <Collection />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { initializeContract } from \"./utils/near\";\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n  })\n  .catch(console.error);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}